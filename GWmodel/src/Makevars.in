CDEFS =  @CDEFS@
R_INC = -I./GWmodelCUDA
PKG_CXXFLAGS = -DARMA_64BIT_WORD=1 $(SHLIB_OPENMP_CXXFLAGS) $(CDEFS) $(R_INC)
CUDA_LIBS =   @CUDA_LIBS@
PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) $(SHLIB_OPENMP_CXXFLAGS) @PKG_LIBS@
ENABLE_CUDA = @ENABLE_CUDA@
GWmodel_CUDA_LIB_PATH=@GWmodel_CUDA_LIB_PATH@

cu_sources = @cu_sources@
cu_sharedlibs =@cu_sharedlibs@
cpp_sources_cuda =  @cpp_sources_cuda@
cpp_sharedlibs_cuda =  @cpp_sharedlibs_cuda@
OBJECTS_CUDA =  @OBJECTS_CUDA@

#CDEFS =  @CDEFS@
TARGET_CUDA_LIB =@TARGET_CUDA_LIB@

cpp_sources = RcppExports.cpp GWmodel.cpp
cpp_sharedlibs= RcppExports.o GWmodel.o

c_sources = init.c
c_sharedlibs = init.o

OBJECTS = ${cpp_sharedlibs} ${c_sharedlibs}

#R_INC = -I./GWmodelCUDA
CXX_ARGS =  @R_CPIC@ $(SHLIB_OPENMP_CXXFLAGS) -DNDEBUG ${CXX11FLAGS}

CU_ARGS = -std=c++14 -Xcompiler -fPIC -Xcudafe --diag_suppress=boolean_controlling_expr_is_constant -DNDEBUG
CU_INCL = ${R_INCL}
CU_ARCH = \
-gencode arch=compute_35,code=sm_35 \
-gencode arch=compute_37,code=sm_37 \
-gencode arch=compute_52,code=sm_52 \
-gencode arch=compute_60,code=sm_60 \
-gencode arch=compute_61,code=sm_61 \
-gencode arch=compute_70,code=sm_70 \
-gencode arch=compute_75,code=sm_75

NVCC=@NVCC@
CUDA_INCL =  @CUDA_INCL@

vpath %.cu ./GWmodelCUDA
vpath %.cpp ./GWmodelCUDA

.PHONY: all clean

all : ${TARGET_CUDA_LIB} GWmodel.so

${TARGET_CUDA_LIB}: ${OBJECTS_CUDA}
	${SHLIB_LINK}  -o $@ $^ ${CUDA_LIBS} 
	mkdir -p ${GWmodel_CUDA_LIB_PATH}
	cp $@ ${GWmodel_CUDA_LIB_PATH}
	chown -R ${USER}:${USER} ${HOME}/.cache/GWmodel


GWmodel.so : ${TARGET_CUDA_LIB} ${OBJECTS_CUDA} ${OBJECTS}

${cpp_sharedlibs_cuda}: %.o: %.cpp 
	$(CXX) $(SHLIB_OPENMP_CXXFLAGS) -DNDEBUG ${CXX11FLAGS} -DCUDA_ARCH=52 $(R_INC) -I${CUDA_INCL} -fPIC $< -c

${cu_sharedlibs}: %.o: %.cu
	$(NVCC) $(CU_ARCH) $(CU_ARGS) $(CU_INCL) -I${CUDA_INCL} $< -c

${cpp_sharedlibs}: %.o :%.cpp

clean: 
	rm -rf  *.o Makevars
    
